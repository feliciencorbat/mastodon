version: '2'

services:
  mastodon-db:
    container_name: mastodon_db
    image: 'postgres:15.1-alpine'
    volumes:
      - './db:/var/lib/postgresql/data'
    restart: unless-stopped
    environment:
      POSTGRES_DB: '${MASTODON_POSTGRES_DATABASE}'
      POSTGRES_USER: '${MASTODON_POSTGRES_USERNAME}'
      POSTGRES_PASSWORD: '${MASTODON_POSTGRES_PASSWORD}'
    networks:
      - mastodon_backend

  mastodon-redis:
    container_name: mastodon_redis
    image: 'redis:7.0-alpine'
    networks:
      - mastodon_backend

  mastodon-web:
    container_name: mastodon_web
    image: 'tootsuite/mastodon:v4.1'
    command: 'bash -c "/provision.sh; rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"'
    volumes:
      - './web:/mastodon/public/system'
      - './provision.sh:/provision.sh:ro'
    restart: unless-stopped
    environment:
      RAILS_ENV: 'production'
      LOCAL_DOMAIN: '${MASTODON_DOMAIN}'
      REDIS_HOST: 'mastodon-redis'
      DB_HOST: 'mastodon-db'
      DB_NAME: '${MASTODON_POSTGRES_DATABASE}'
      DB_USER: '${MASTODON_POSTGRES_USERNAME}'
      DB_PASS: '${MASTODON_POSTGRES_PASSWORD}'
      SECRET_KEY_BASE: '${MASTODON_SECRET_KEY_BASE}'
      OTP_SECRET: '${MASTODON_OTP_SECRET}'
      MASTODON_ADMIN_USERNAME: '${MASTODON_ADMIN_USERNAME}'
      MASTODON_ADMIN_EMAIL: '${MASTODON_ADMIN_EMAIL}'
    networks:
      - mastodon_backend
      - proxy
    depends_on:
      - mastodon-db
      - mastodon-redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.mastodon.entrypoints=http
      - traefik.http.routers.mastodon.rule=Host("champis.social", "www.champis.social")
      - traefik.http.middlewares.mastodon-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.mastodon.middlewares=mastodon-https-redirect
      - traefik.http.routers.mastodon-secure.entrypoints=https
      - traefik.http.routers.mastodon-secure.rule=Host("champis.social", "www.champis.social")
      - traefik.http.routers.mastodon-secure.tls=true
      - traefik.http.routers.mastodon-secure.tls.certresolver=http
      - traefik.http.routers.mastodon-secure.service=mastodon
      - traefik.http.services.mastodon.loadbalancer.server.port=3000
      - traefik.docker.network=proxy
      
  mastodon-streaming:
    container_name: mastodon_streaming
    image: 'tootsuite/mastodon:v4.1'
    command: node ./streaming
    volumes:
      - './web:/mastodon/public/system'
    restart: unless-stopped
    environment:
      RAILS_ENV: 'production'
      LOCAL_DOMAIN: '${MASTODON_DOMAIN}'
      REDIS_HOST: 'mastodon-redis'
      DB_HOST: 'mastodon-db'
      DB_NAME: '${MASTODON_POSTGRES_DATABASE}'
      DB_USER: '${MASTODON_POSTGRES_USERNAME}'
      DB_PASS: '${MASTODON_POSTGRES_PASSWORD}'
      SECRET_KEY_BASE: '${MASTODON_SECRET_KEY_BASE}'
      OTP_SECRET: '${MASTODON_OTP_SECRET}'
      MASTODON_ADMIN_USERNAME: '${MASTODON_ADMIN_USERNAME}'
      MASTODON_ADMIN_EMAIL: '${MASTODON_ADMIN_EMAIL}'
    networks:
      - mastodon_backend
      - proxy
    depends_on:
      - mastodon-db
      - mastodon-redis
    labels:
      - traefik.enable=true
      - traefik.http.routers.mastodon-streaming.entrypoints=http
      - traefik.http.routers.mastodon-streaming.rule=(Host("champis.social") && PathPrefix("/api/v1/streaming"))
      - traefik.http.middlewares.mastodon-streaming-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.mastodon-streaming.middlewares=mastodon-streaming-https-redirect
      - traefik.http.routers.mastodon-streaming-secure.entrypoints=https
      - traefik.http.routers.mastodon-streaming-secure.rule=(Host("champis.social") && PathPrefix("/api/v1/streaming"))
      - traefik.http.routers.mastodon-streaming-secure.tls=true
      - traefik.http.routers.mastodon-streaming-secure.tls.certresolver=http
      - traefik.http.routers.mastodon-streaming-secure.service=mastodon-streaming
      - traefik.http.services.mastodon-streaming.loadbalancer.server.port=4000
      - traefik.docker.network=proxy
  
  mastodon-sidekiq:
    container_name: mastodon_sidekiq
    image: 'tootsuite/mastodon:v4.1'
    command: 'bundle exec sidekiq'
    volumes:
      - './web:/mastodon/public/system'
    restart: unless-stopped
    environment:
      RAILS_ENV: 'production'
      LOCAL_DOMAIN: '${MASTODON_DOMAIN}'
      REDIS_HOST: 'mastodon-redis'
      DB_HOST: 'mastodon-db'
      DB_NAME: '${MASTODON_POSTGRES_DATABASE}'
      DB_USER: '${MASTODON_POSTGRES_USERNAME}'
      DB_PASS: '${MASTODON_POSTGRES_PASSWORD}'
      SECRET_KEY_BASE: '${MASTODON_SECRET_KEY_BASE}'
      OTP_SECRET: '${MASTODON_OTP_SECRET}'
      SMTP_SERVER: '${SMTP_SERVER}'
      SMTP_PORT: '${SMTP_PORT}'
      SMTP_LOGIN: '${SMTP_LOGIN}'
      SMTP_PASSWORD: '${SMTP_PASSWORD}'
      SMTP_FROM_ADDRESS: '${SMTP_FROM_ADDRESS}'
    depends_on:
      - mastodon-db
      - mastodon-redis
    networks:
      - mastodon_backend
      
networks:
  mastodon_backend:
  proxy:
    external: true